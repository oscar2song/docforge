name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install tesseract-ocr poppler-utils

    - name: Install system dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install tesseract poppler

    - name: Install system dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        # Note: This is a basic setup. For full Windows support,
        # you might want to use a pre-built action or download binaries
        choco install tesseract

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .

    - name: Install dev dependencies
      run: |
        pip install pytest pytest-cov black flake8 mypy

    - name: Run code formatting check
      run: |
        black --check .

    - name: Run linting
      run: |
        flake8 docforge --count --select=E9,F63,F7,F82 --show-source --statistics

    - name: Run type checking
      run: |
        mypy docforge --ignore-missing-imports

    - name: Test CLI installation
      run: |
        docforge --help

    - name: Test CLI commands
      run: |
        docforge test-rich
        docforge test-errors
        docforge test-validation

    - name: Run unit tests
      run: |
        pytest tests/ -v --cov=docforge --cov-report=xml

    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.9'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Check package
      run: |
        twine check dist/*

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/
